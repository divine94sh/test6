
import json
import random
import time
import datetime
import string
import os
import time,base64
from WnLibraryV3 import WnLog
import random

from datetime import date, timedelta
path = WnLog.path
'''
系统操作相关关键字
'''


class WnSystem(object):

    def wn_get_current_date(self, format="%Y-%m-%d"):
        """获取当天日期"""
        return time.strftime(format, time.localtime(time.time()))

    def wn_get_current_time(self):
        """获取当前时间"""
        return time.strftime("%H:%M:%S", time.localtime(time.time()))

    def wn_get_current_date_n_days_later(self, num=0):
        """获取当天日期之后N天的日期"""
        return time.strftime("%Y-%m-%d", time.localtime(time.time() + 86400 * num))

    def wn_get_current_date_n_days_before(self, num=0):
        """获取当天日期之前N天的日期"""
        return time.strftime("%Y-%m-%d", time.localtime(time.time() - 86400 * num))

    def wn_get_current_datetime(self):
        return time.strftime('%Y-%m-%d %H:%M:%S')

    def wn_get_current_datetime_filename(self):
        filenametime = datetime.datetime.now().strftime('%Y%m%d_%H%M%S_%f')[0:21]
        # print(filenametime)
        return filenametime

    def wn_get_current_datetime_hzxm(self):
        hzxm = datetime.datetime.now().strftime('%Y%m%d%H%M%S%f')[0:21]
        # print(filenametime)
        return hzxm

    def wn_get_pname(self,x):
        """根据姓生成姓名，为空就随机姓氏"""
        if x == '':
            head = random.randint(0xb0, 0xf7)
            body = random.randint(0xa1, 0xfe)
            val = f'{head:x} {body:x}'
            str = bytes.fromhex(val).decode('gb2312')
        else:
            str=x
        head1 = random.randint(0xb0, 0xf7)
        body1 = random.randint(0xa1, 0xfe)
        val1 = f'{head1:x} {body1:x}'
        str1 = bytes.fromhex(val1).decode('gb2312')
        head2 = random.randint(0xb0, 0xf7)
        body2 = random.randint(0xa1, 0xfe)
        val2 = f'{head2:x} {body2:x}'
        str2 = bytes.fromhex(val2).decode('gb2312')
        str=str+str1+str2
        return str

    def wn_os_parent_dir(self,dir):
        """返回上级目录"""
        return os.path.abspath(os.path.join(dir, ".."))

    def wn_os_fullname(self,dir,newfloder,filename):
        """拼接目录和文件名"""
        if  newfloder =='':
            return os.path.join(dir,filename)
        else:
            return os.path.join(dir, newfloder, filename)

    def wn_convert_password(self,password):
        return base64.b64encode(password[::-1].encode('utf-8')).decode('utf-8')

    def gennerator(self):
        global codelist
        codelist = [340100, 110000, 120104, 120112, 130200, 420100, 520100, 620100, 370902, 430100, 430181]
        id = codelist[random.randint(0, len(codelist))]  # 地区项
        id = str(id)
        id = id + str(random.randint(1960, 2019))  # 年份项
        da = date.today() + timedelta(days=random.randint(1, 366))  # 月份和日期项
        id = id + da.strftime('%m%d')
        id = id + str(random.randint(100, 300))  # ，顺序号简单处理

        i = 0
        count = 0
        weight = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]  # 权重项
        checkcode = {'0': '1', '1': '0', '2': 'X', '3': '9', '4': '8', '5': '7', '6': '6', '7': '5', '8': '5', '9': '3',
                     '10': '2'}  # 校验码映射
        for i in range(0, len(id)):
            count = count + int(id[i]) * weight[i]
            id = id + checkcode[str(count % 11)]  # 算出校验码
            return id


if __name__ == "__main__":
    WnS = WnSystem()
    # fn = WnS.wn_os_fullname("""D:\\0000.PycharmProjects\\winning-automation-test\\6.0TEST\\用例层\\03_数据生成""","reprot",'fhir.html')
    # print(fn)
    # WnS.wn_get_current_datetime_hzxm()

